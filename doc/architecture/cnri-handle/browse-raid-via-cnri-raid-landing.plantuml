@startuml
title Browse RAID landing page, via "handle.net" with global landing page

actor "reader" as reader

participant "Global Handle Infra" as ghi
participant "Raido Local Handle Service" as lhs
database "Local Handle Service DB" as lhsDb

participant "Raid web-server" as raidWeb

participant "Raido web-server" as raidoWeb
participant "Raido app-client" as appClient

participant "raido-api-svc" as raidoApi
database "Raido DB" as raidoDb
participant "raido-api-svc" as raidoApi
database "Raido DB" as raidoDb


alt handle.net
group CNRI
reader -> ghi: browse to\n `hdl.handle.net/20.2000.1/111111`
ghi -> lhs: GET `20.2000.1/111111`
lhs -> lhsDb: query `20.2000.1/111111`
return `raid.org/20.2000.1/111111`
lhs --> ghi: `raid.org/20.2000.1/111111`
ghi --> reader: HTTP 302 redirect\n location: raid.org/20.2000.1/111111
end
reader -> reader : reset browser location to:\n `raid.org/20.2000.1/111111`


alt 
group Raid 
reader -> raidWeb: browse to \n`hdl.raid.org/20.2000.1/111111`
raidWeb -> raidWeb: is prefix `20.2000.1`?
raidWeb --> reader: HTTP 302 redirect\n location: raid.org.au/20.2000.1/111111
end 

reader -> reader : reset browser location to:\n `raid.org.au/20.2000.1/111111`
alt
group Raido
reader -> raidoWeb: browse to \n`hdl.raid.org.au/20.2000.1/111111`
return app-client HTML/JS code
reader -> appClient: execute app-client code  
appClient -> raidoApi: GET /raid/v1/20.2000.1/111111
raidoApi -> raidoDb: lookup `20.2000.1/111111`
raidoDb --> raidoApi: return `{metadata}`
raidoApi --> appClient: return `{metadata}`
appClient --> reader: render RAiD as HTML\n for user to view  
end
 
@enduml



