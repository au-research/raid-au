/* tslint:disable */
/* eslint-disable */
/**
 * RAID v2 API
 * This file is where all the endpoint paths are defined, it\'s the \"top level\' of the OpenAPI definition that links all the different files together. The `3.0` in the filename refers to this file being based on OpenAPI 3.0  as opposed to OpenAPI 3.1, which the tooling doesn\'t support yet. The `2.0.0` in the version field refers to the fact that there\'s already  a `1.0.0` used for the legacy RAiD application. Note that swagger ui doesn\'t currently work with our spec,  see https://github.com/swagger-api/swagger-ui/issues/7724 But the spec works fine with openapi-generator tooling. 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: contact@raid.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Access } from './Access';
import {
    AccessFromJSON,
    AccessFromJSONTyped,
    AccessToJSON,
    AccessToJSONTyped,
} from './Access';
import type { Id } from './Id';
import {
    IdFromJSON,
    IdFromJSONTyped,
    IdToJSON,
    IdToJSONTyped,
} from './Id';

/**
 * 
 * @export
 * @interface ClosedRaid
 */
export interface ClosedRaid {
    /**
     * 
     * @type {Id}
     * @memberof ClosedRaid
     */
    identifier?: Id;
    /**
     * 
     * @type {Access}
     * @memberof ClosedRaid
     */
    access?: Access;
}

/**
 * Check if a given object implements the ClosedRaid interface.
 */
export function instanceOfClosedRaid(value: object): value is ClosedRaid {
    return true;
}

export function ClosedRaidFromJSON(json: any): ClosedRaid {
    return ClosedRaidFromJSONTyped(json, false);
}

export function ClosedRaidFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClosedRaid {
    if (json == null) {
        return json;
    }
    return {
        
        'identifier': json['identifier'] == null ? undefined : IdFromJSON(json['identifier']),
        'access': json['access'] == null ? undefined : AccessFromJSON(json['access']),
    };
}

  export function ClosedRaidToJSON(json: any): ClosedRaid {
      return ClosedRaidToJSONTyped(json, false);
  }

  export function ClosedRaidToJSONTyped(value?: ClosedRaid | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'identifier': IdToJSON(value['identifier']),
        'access': AccessToJSON(value['access']),
    };
}

