/*
 * This file is generated by jOOQ.
 */
package au.org.raid.db.jooq.tables.records;


import au.org.raid.db.jooq.tables.SubjectType;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SubjectTypeRecord extends UpdatableRecordImpl<SubjectTypeRecord> implements Record5<String, String, String, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>api_svc.subject_type.id</code>.
     */
    public SubjectTypeRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>api_svc.subject_type.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>api_svc.subject_type.name</code>.
     */
    public SubjectTypeRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>api_svc.subject_type.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>api_svc.subject_type.description</code>.
     */
    public SubjectTypeRecord setDescription(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>api_svc.subject_type.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>api_svc.subject_type.note</code>.
     */
    public SubjectTypeRecord setNote(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>api_svc.subject_type.note</code>.
     */
    public String getNote() {
        return (String) get(3);
    }

    /**
     * Setter for <code>api_svc.subject_type.schema_id</code>.
     */
    public SubjectTypeRecord setSchemaId(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>api_svc.subject_type.schema_id</code>.
     */
    public Integer getSchemaId() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, String, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, String, String, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return SubjectType.SUBJECT_TYPE.ID;
    }

    @Override
    public Field<String> field2() {
        return SubjectType.SUBJECT_TYPE.NAME;
    }

    @Override
    public Field<String> field3() {
        return SubjectType.SUBJECT_TYPE.DESCRIPTION;
    }

    @Override
    public Field<String> field4() {
        return SubjectType.SUBJECT_TYPE.NOTE;
    }

    @Override
    public Field<Integer> field5() {
        return SubjectType.SUBJECT_TYPE.SCHEMA_ID;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public String component4() {
        return getNote();
    }

    @Override
    public Integer component5() {
        return getSchemaId();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public String value4() {
        return getNote();
    }

    @Override
    public Integer value5() {
        return getSchemaId();
    }

    @Override
    public SubjectTypeRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public SubjectTypeRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public SubjectTypeRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public SubjectTypeRecord value4(String value) {
        setNote(value);
        return this;
    }

    @Override
    public SubjectTypeRecord value5(Integer value) {
        setSchemaId(value);
        return this;
    }

    @Override
    public SubjectTypeRecord values(String value1, String value2, String value3, String value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SubjectTypeRecord
     */
    public SubjectTypeRecord() {
        super(SubjectType.SUBJECT_TYPE);
    }

    /**
     * Create a detached, initialised SubjectTypeRecord
     */
    public SubjectTypeRecord(String id, String name, String description, String note, Integer schemaId) {
        super(SubjectType.SUBJECT_TYPE);

        setId(id);
        setName(name);
        setDescription(description);
        setNote(note);
        setSchemaId(schemaId);
    }
}
