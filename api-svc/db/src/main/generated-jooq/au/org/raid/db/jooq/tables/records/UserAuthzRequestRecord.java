/*
 * This file is generated by jOOQ.
 */
package au.org.raid.db.jooq.tables.records;


import au.org.raid.db.jooq.enums.AuthRequestStatus;
import au.org.raid.db.jooq.enums.IdProvider;
import au.org.raid.db.jooq.tables.UserAuthzRequest;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserAuthzRequestRecord extends UpdatableRecordImpl<UserAuthzRequestRecord> implements Record12<Long, AuthRequestStatus, Long, String, String, IdProvider, String, Long, Long, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>api_svc.user_authz_request.id</code>.
     */
    public UserAuthzRequestRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>api_svc.user_authz_request.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>api_svc.user_authz_request.status</code>.
     */
    public UserAuthzRequestRecord setStatus(AuthRequestStatus value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>api_svc.user_authz_request.status</code>.
     */
    public AuthRequestStatus getStatus() {
        return (AuthRequestStatus) get(1);
    }

    /**
     * Setter for <code>api_svc.user_authz_request.service_point_id</code>.
     */
    public UserAuthzRequestRecord setServicePointId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>api_svc.user_authz_request.service_point_id</code>.
     */
    public Long getServicePointId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>api_svc.user_authz_request.email</code>. Lowercase chars
     * only - db enforced
     */
    public UserAuthzRequestRecord setEmail(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>api_svc.user_authz_request.email</code>. Lowercase chars
     * only - db enforced
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>api_svc.user_authz_request.client_id</code>.
     */
    public UserAuthzRequestRecord setClientId(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>api_svc.user_authz_request.client_id</code>.
     */
    public String getClientId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>api_svc.user_authz_request.id_provider</code>.
     */
    public UserAuthzRequestRecord setIdProvider(IdProvider value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>api_svc.user_authz_request.id_provider</code>.
     */
    public IdProvider getIdProvider() {
        return (IdProvider) get(5);
    }

    /**
     * Setter for <code>api_svc.user_authz_request.subject</code>.
     */
    public UserAuthzRequestRecord setSubject(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>api_svc.user_authz_request.subject</code>.
     */
    public String getSubject() {
        return (String) get(6);
    }

    /**
     * Setter for <code>api_svc.user_authz_request.responding_user</code>. user
     * that approved or rejected, not set until that happens
     */
    public UserAuthzRequestRecord setRespondingUser(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>api_svc.user_authz_request.responding_user</code>. user
     * that approved or rejected, not set until that happens
     */
    public Long getRespondingUser() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>api_svc.user_authz_request.approved_user</code>. the
     * user that was approved, set when request is approved and the
     *   user is created or updated
     */
    public UserAuthzRequestRecord setApprovedUser(Long value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>api_svc.user_authz_request.approved_user</code>. the
     * user that was approved, set when request is approved and the
     *   user is created or updated
     */
    public Long getApprovedUser() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>api_svc.user_authz_request.description</code>.
     */
    public UserAuthzRequestRecord setDescription(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>api_svc.user_authz_request.description</code>.
     */
    public String getDescription() {
        return (String) get(9);
    }

    /**
     * Setter for <code>api_svc.user_authz_request.date_requested</code>.
     */
    public UserAuthzRequestRecord setDateRequested(LocalDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>api_svc.user_authz_request.date_requested</code>.
     */
    public LocalDateTime getDateRequested() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>api_svc.user_authz_request.date_responded</code>. not
     * set until approved or rejected
     */
    public UserAuthzRequestRecord setDateResponded(LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>api_svc.user_authz_request.date_responded</code>. not
     * set until approved or rejected
     */
    public LocalDateTime getDateResponded() {
        return (LocalDateTime) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, AuthRequestStatus, Long, String, String, IdProvider, String, Long, Long, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Long, AuthRequestStatus, Long, String, String, IdProvider, String, Long, Long, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserAuthzRequest.USER_AUTHZ_REQUEST.ID;
    }

    @Override
    public Field<AuthRequestStatus> field2() {
        return UserAuthzRequest.USER_AUTHZ_REQUEST.STATUS;
    }

    @Override
    public Field<Long> field3() {
        return UserAuthzRequest.USER_AUTHZ_REQUEST.SERVICE_POINT_ID;
    }

    @Override
    public Field<String> field4() {
        return UserAuthzRequest.USER_AUTHZ_REQUEST.EMAIL;
    }

    @Override
    public Field<String> field5() {
        return UserAuthzRequest.USER_AUTHZ_REQUEST.CLIENT_ID;
    }

    @Override
    public Field<IdProvider> field6() {
        return UserAuthzRequest.USER_AUTHZ_REQUEST.ID_PROVIDER;
    }

    @Override
    public Field<String> field7() {
        return UserAuthzRequest.USER_AUTHZ_REQUEST.SUBJECT;
    }

    @Override
    public Field<Long> field8() {
        return UserAuthzRequest.USER_AUTHZ_REQUEST.RESPONDING_USER;
    }

    @Override
    public Field<Long> field9() {
        return UserAuthzRequest.USER_AUTHZ_REQUEST.APPROVED_USER;
    }

    @Override
    public Field<String> field10() {
        return UserAuthzRequest.USER_AUTHZ_REQUEST.DESCRIPTION;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return UserAuthzRequest.USER_AUTHZ_REQUEST.DATE_REQUESTED;
    }

    @Override
    public Field<LocalDateTime> field12() {
        return UserAuthzRequest.USER_AUTHZ_REQUEST.DATE_RESPONDED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public AuthRequestStatus component2() {
        return getStatus();
    }

    @Override
    public Long component3() {
        return getServicePointId();
    }

    @Override
    public String component4() {
        return getEmail();
    }

    @Override
    public String component5() {
        return getClientId();
    }

    @Override
    public IdProvider component6() {
        return getIdProvider();
    }

    @Override
    public String component7() {
        return getSubject();
    }

    @Override
    public Long component8() {
        return getRespondingUser();
    }

    @Override
    public Long component9() {
        return getApprovedUser();
    }

    @Override
    public String component10() {
        return getDescription();
    }

    @Override
    public LocalDateTime component11() {
        return getDateRequested();
    }

    @Override
    public LocalDateTime component12() {
        return getDateResponded();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public AuthRequestStatus value2() {
        return getStatus();
    }

    @Override
    public Long value3() {
        return getServicePointId();
    }

    @Override
    public String value4() {
        return getEmail();
    }

    @Override
    public String value5() {
        return getClientId();
    }

    @Override
    public IdProvider value6() {
        return getIdProvider();
    }

    @Override
    public String value7() {
        return getSubject();
    }

    @Override
    public Long value8() {
        return getRespondingUser();
    }

    @Override
    public Long value9() {
        return getApprovedUser();
    }

    @Override
    public String value10() {
        return getDescription();
    }

    @Override
    public LocalDateTime value11() {
        return getDateRequested();
    }

    @Override
    public LocalDateTime value12() {
        return getDateResponded();
    }

    @Override
    public UserAuthzRequestRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserAuthzRequestRecord value2(AuthRequestStatus value) {
        setStatus(value);
        return this;
    }

    @Override
    public UserAuthzRequestRecord value3(Long value) {
        setServicePointId(value);
        return this;
    }

    @Override
    public UserAuthzRequestRecord value4(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserAuthzRequestRecord value5(String value) {
        setClientId(value);
        return this;
    }

    @Override
    public UserAuthzRequestRecord value6(IdProvider value) {
        setIdProvider(value);
        return this;
    }

    @Override
    public UserAuthzRequestRecord value7(String value) {
        setSubject(value);
        return this;
    }

    @Override
    public UserAuthzRequestRecord value8(Long value) {
        setRespondingUser(value);
        return this;
    }

    @Override
    public UserAuthzRequestRecord value9(Long value) {
        setApprovedUser(value);
        return this;
    }

    @Override
    public UserAuthzRequestRecord value10(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public UserAuthzRequestRecord value11(LocalDateTime value) {
        setDateRequested(value);
        return this;
    }

    @Override
    public UserAuthzRequestRecord value12(LocalDateTime value) {
        setDateResponded(value);
        return this;
    }

    @Override
    public UserAuthzRequestRecord values(Long value1, AuthRequestStatus value2, Long value3, String value4, String value5, IdProvider value6, String value7, Long value8, Long value9, String value10, LocalDateTime value11, LocalDateTime value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserAuthzRequestRecord
     */
    public UserAuthzRequestRecord() {
        super(UserAuthzRequest.USER_AUTHZ_REQUEST);
    }

    /**
     * Create a detached, initialised UserAuthzRequestRecord
     */
    public UserAuthzRequestRecord(Long id, AuthRequestStatus status, Long servicePointId, String email, String clientId, IdProvider idProvider, String subject, Long respondingUser, Long approvedUser, String description, LocalDateTime dateRequested, LocalDateTime dateResponded) {
        super(UserAuthzRequest.USER_AUTHZ_REQUEST);

        setId(id);
        setStatus(status);
        setServicePointId(servicePointId);
        setEmail(email);
        setClientId(clientId);
        setIdProvider(idProvider);
        setSubject(subject);
        setRespondingUser(respondingUser);
        setApprovedUser(approvedUser);
        setDescription(description);
        setDateRequested(dateRequested);
        setDateResponded(dateResponded);
    }
}
