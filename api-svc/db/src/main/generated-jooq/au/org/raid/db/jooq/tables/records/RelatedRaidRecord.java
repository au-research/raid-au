/*
 * This file is generated by jOOQ.
 */
package au.org.raid.db.jooq.tables.records;


import au.org.raid.db.jooq.tables.RelatedRaid;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RelatedRaidRecord extends UpdatableRecordImpl<RelatedRaidRecord> implements Record3<String, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>api_svc.related_raid.handle</code>.
     */
    public RelatedRaidRecord setHandle(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>api_svc.related_raid.handle</code>.
     */
    public String getHandle() {
        return (String) get(0);
    }

    /**
     * Setter for <code>api_svc.related_raid.related_raid_handle</code>.
     */
    public RelatedRaidRecord setRelatedRaidHandle(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>api_svc.related_raid.related_raid_handle</code>.
     */
    public String getRelatedRaidHandle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>api_svc.related_raid.related_raid_type_id</code>.
     */
    public RelatedRaidRecord setRelatedRaidTypeId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>api_svc.related_raid.related_raid_type_id</code>.
     */
    public Integer getRelatedRaidTypeId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return RelatedRaid.RELATED_RAID.HANDLE;
    }

    @Override
    public Field<String> field2() {
        return RelatedRaid.RELATED_RAID.RELATED_RAID_HANDLE;
    }

    @Override
    public Field<Integer> field3() {
        return RelatedRaid.RELATED_RAID.RELATED_RAID_TYPE_ID;
    }

    @Override
    public String component1() {
        return getHandle();
    }

    @Override
    public String component2() {
        return getRelatedRaidHandle();
    }

    @Override
    public Integer component3() {
        return getRelatedRaidTypeId();
    }

    @Override
    public String value1() {
        return getHandle();
    }

    @Override
    public String value2() {
        return getRelatedRaidHandle();
    }

    @Override
    public Integer value3() {
        return getRelatedRaidTypeId();
    }

    @Override
    public RelatedRaidRecord value1(String value) {
        setHandle(value);
        return this;
    }

    @Override
    public RelatedRaidRecord value2(String value) {
        setRelatedRaidHandle(value);
        return this;
    }

    @Override
    public RelatedRaidRecord value3(Integer value) {
        setRelatedRaidTypeId(value);
        return this;
    }

    @Override
    public RelatedRaidRecord values(String value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RelatedRaidRecord
     */
    public RelatedRaidRecord() {
        super(RelatedRaid.RELATED_RAID);
    }

    /**
     * Create a detached, initialised RelatedRaidRecord
     */
    public RelatedRaidRecord(String handle, String relatedRaidHandle, Integer relatedRaidTypeId) {
        super(RelatedRaid.RELATED_RAID);

        setHandle(handle);
        setRelatedRaidHandle(relatedRaidHandle);
        setRelatedRaidTypeId(relatedRaidTypeId);
    }
}
