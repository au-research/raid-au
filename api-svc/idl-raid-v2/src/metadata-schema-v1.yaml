openapi: 3.0.3
info:
  title: raido-metadata-schema-v1
  version: 1.0.0
  description: >
    The first metadata schema supported by Raido.
    This is what all raids imported from the legacy application were imported
    as.
paths:
  /mint-raido-schema-v1:
    post:
      tags:
        - basic-raid-experimental
      operationId: mint-raido-schema-v1
      summary: mint a raido-metadata-schema-v1 raid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [mintRequest, metadata]
              description: >
                `id` block is not required for minting and is ignored if set.
              properties:
                mintRequest:
                  type: object
                  description: > 
                    Raido data that doesn't belong on the raid metadata.
                    ServicePoint Id means nothing in a RAID context - it's 
                    purely a Raido implementation detail (that may change).
                  required: [servicePointId]
                  properties:
                    servicePointId: {$ref: 'shared.yaml#/components/schemas/SurrogateKey' }
                metadata: {$ref: '#/components/schemas/MetadataSchemaV1'}
      responses:
        '200':
          description: data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MintResponse'
  /read-raid-v2:
    post:
      tags:
        - basic-raid-experimental
      operationId: read-raid-v2
      summary: read a raid, caller must be authorized
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [handle]
              properties:
                handle: {type: string}
      responses:
        '200':
          description: data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadRaidResponseV2'
  /list-raid-v2:
    post:
      tags:
        - basic-raid-experimental
      operationId: list-raid-v2
      summary: list raids
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RaidListRequestV2'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RaidListItemV2'
  /migrate-legacy-raid:
    post:
      tags:
        - admin-experimental
      operationId: /migrate-legacy-raid
      summary: >
        insert a legacy raid with schema raido-metadata-schema-v1, 
        using it's originally minted handle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [mintRequest, metadata]
              properties:
                mintRequest:
                  type: object
                  required: [servicePointId]
                  properties:
                    servicePointId: {$ref: 'shared.yaml#/components/schemas/SurrogateKey' }
                    contentIndex: { type: integer}
                    createDate: { type: string, format: date-time }
                metadata: {$ref: '#/components/schemas/MetadataSchemaV1'}
      responses:
        '200':
          description: data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MintResponse'
  /update-raido-schema-v1:
    post:
      tags:
        - basic-raid-experimental
      operationId: update-raido-schema-v1
      summary: update a raido-metadata-schema-v1 raid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [metadata]
              properties:
                # could just pass this in directly, but think we might need to 
                # extend it with extra out-of-band stuff later.  Though maybe
                # we'll use a separate endpoint when that need arises.
                metadata: {$ref: '#/components/schemas/MetadataSchemaV1'}
      responses:
        '200':
          description: data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MintResponse'


components:
  schemas:
    MetadataSchemaV1:
      type: object
      required: [ metadataSchema, id, titles, dates, access]
      properties:
        metadataSchema: {$ref: 'shared.yaml#/components/schemas/RaidoMetaschema'}
        id: {$ref: 'shared.yaml#/components/schemas/IdBlock'}
        titles: 
          type: array
          items: {$ref: '#/components/schemas/TitleBlock'}
        dates: {$ref: '#/components/schemas/DatesBlock'}
        descriptions:
          type: array
          items: {$ref: '#/components/schemas/DescriptionBlock'}
        access: {$ref: 'shared.yaml#/components/schemas/AccessBlock'}
        alternateUrls:
          type: array
          items: {$ref: '#/components/schemas/AlternateUrlBlock'}
    TitleBlock:
      type: object
      required: [title, type, startDate]
      properties:
        title: {type: string}
        type: {$ref: '#/components/schemas/TitleType'}
        startDate: { type: string, format: date }
        endDate: { type: string, format: date }
    DatesBlock:
      type: object
      required: ["startDate"]
      properties:
        startDate: { type: string, format: date }
        endDate: { type: string, format: date }
    DescriptionBlock:
      type: object
      required: ["description", "type"]
      properties:
        description: {type: string}
        type: {$ref: '#/components/schemas/DescriptionType'}
    AlternateUrlBlock:
      type: object
      required: ["url", ]
      properties:
        url: {type: string}
    TitleType:
      type: string
      enum: ['Primary Title', 'Alternative Title']
    DescriptionType:
      type: string
      enum: ['Primary Description', 'Alternative Description']
    RaidListRequestV2:
      type: object
      required: [servicePointId]
      properties:
        servicePointId: {$ref: 'shared.yaml#/components/schemas/SurrogateKey' }
        primaryTitle: {type: string}
    RaidListItemV2:
      type: object
      required: [handle, confidential, createdDateTime]
      properties:
        handle: {type: string}
        primaryTitle: {type: string}
        startDate: { type: string, format: date }
        createDate: { type: string, format: date-time }
    ReadRaidResponseV2:
      type: object
      required: [
        handle, servicePointId,
        primaryTitle, url,
        startDate, createDate, ]
      properties:
        handle: { type: string }
        servicePointId: { $ref: 'shared.yaml#/components/schemas/SurrogateKey' }
        servicePointName: { type: string }
        primaryTitle: { type: string }
        startDate: { type: string, format: date }
        createDate: { type: string, format: date-time }
        url: { type: string }
        metadata: { type: object }
    MintResponse:
      type: object
      required: [success]
      properties:
        success: { type: boolean }
        raid: { $ref: '#/components/schemas/ReadRaidResponseV2' }
        failures: 
          type: array
          items: {$ref: 'shared.yaml#/components/schemas/ValidationFailure'}
      
