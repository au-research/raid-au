---
openapi: "3.1.0"
servers:
- url: "https://api.prod.raid.org.au"
  description: "The production service - \"PROD\"."
- url: "https://api.demo.raid.org.au"
  description: "DEMO environment, used for client integration testing and  customer\
    \ demonstrations.\n"
- url: "https://api.test.raid.org.au"
  description: "dev environment, used for developer integration testing.\n"
- url: "http://localhost:8080"
  description: "Local development."
info:
  title: "RAID v2 API"
  version: "2.0.0"
  description: "This file is where all the endpoint paths are defined, it's the \"\
    top level' of the OpenAPI definition that links all the different files together.\
    \ The `3.0` in the filename refers to this file being based on OpenAPI 3.0  as\
    \ opposed to OpenAPI 3.1, which the tooling doesn't support yet. The `2.0.0` in\
    \ the version field refers to the fact that there's already  a `1.0.0` used for\
    \ the legacy RAiD application. Note that swagger ui doesn't currently work with\
    \ our spec,  see https://github.com/swagger-api/swagger-ui/issues/7724 But the\
    \ spec works fine with openapi-generator tooling.\n"
  contact:
    name: "ARDC RAiD team"
    email: "contact@raid.org"
  termsOfService: "https://github.com/au-research/raido/blob/main/doc/service-level-guide.md"
tags:
- name: "public-experimental"
  description: "The APIs are not stable, they may change at any time. Can be called\
    \ without auth."
- name: "public-stable"
  description: "The APIs are stable and will be supported in to the future, as per\
    \ the service-level-guide.   Can be called without auth.\n"
- name: "basic-raid-experimental"
  description: "The APIs are not stable, they may change at any time. These endpoints\
    \ are intended to be called by the Raido UI. Must be called with auth."
- name: "basic-raid-stable"
  description: "Stable APIs."
security:
- bearerAuth: []
paths:
  /raid/:
    post:
      security:
      - bearerAuth: []
      tags:
      - "raid"
      operationId: "mintRaid"
      summary: "Mint a raid"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RaidCreateRequest"
      responses:
        201:
          description: "The Raid was successfully created."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RaidDto"
        400:
          description: "There was a problem with the message sent to the server."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationFailureResponse"
    get:
      security:
      - bearerAuth: []
      tags:
      - "raid"
      operationId: "findAllRaids"
      summary: "List raids"
      parameters:
      - name: "includeFields"
        description: "The top level fields to include in each RAiD in the response\
          \ body. Excludes all other fields."
        example:
        - "identifier"
        - "title"
        - "date"
        in: "query"
        schema:
          type: "array"
          items:
            type: "string"
      - name: "contributor.id"
        description: "Only show RAiDs that include a contributor with the given id"
        example: "https://orcid.org/0009-0006-4129-5257"
        in: "query"
        schema:
          type: "string"
      - name: "organisation.id"
        description: "Only show RAiDs that include an organisation with the given\
          \ id"
        example: "https://ror.org/038sjwq14"
        in: "query"
        schema:
          type: "string"
      responses:
        200:
          description: "success"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/RaidDto"
  /raid/{prefix}/{suffix}:
    parameters:
    - name: "prefix"
      in: "path"
      required: true
      description: "Prefix of the raid handle"
      schema:
        type: "string"
    - name: "suffix"
      in: "path"
      required: true
      description: "Suffix of the raid handle"
      schema:
        type: "string"
    get:
      security:
      - bearerAuth: []
      tags:
      - "raid"
      operationId: "findRaidByName"
      summary: "Read a raid"
      responses:
        200:
          description: "data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RaidDto"
            text/turtle:
              schema:
                type: "string"
            application/n-triples:
              schema:
                type: "string"
            application/rdf+xml:
              schema:
                type: "string"
            application/ld+json:
              schema:
                type: "object"
        403:
          description: "Closed or Embargoed raids return a 403 response with an access\
            \ statement"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClosedRaid"
    put:
      security:
      - bearerAuth: []
      tags:
      - "raid"
      operationId: "updateRaid"
      summary: "Update a raid"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RaidUpdateRequest"
      responses:
        200:
          description: "The Raid was successfully updated."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RaidDto"
        400:
          description: "Bad request. There was a problem with the message sent to\
            \ the server."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationFailureResponse"
    patch:
      security:
      - bearerAuth: []
      tags:
      - "raid"
      operationId: "patchRaid"
      summary: "Patch a raid"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RaidPatchRequest"
      responses:
        200:
          description: "The Raid was successfully updated."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RaidDto"
        400:
          description: "Bad request. There was a problem with the message sent to\
            \ the server."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationFailureResponse"
  /raid/{prefix}/{suffix}/{version}:
    parameters:
    - name: "prefix"
      in: "path"
      required: true
      description: "Prefix of the raid handle"
      schema:
        type: "string"
    - name: "suffix"
      in: "path"
      required: true
      description: "Suffix of the raid handle"
      schema:
        type: "string"
    - name: "version"
      in: "path"
      required: true
      description: "The version of the raid"
      schema:
        type: "integer"
    get:
      security:
      - bearerAuth: []
      tags:
      - "raid"
      operationId: "findRaidByNameAndVersion"
      summary: "Read a raid with a specified version"
      responses:
        200:
          description: "data"
          content:
            application/json:
              schema:
                type: null
        403:
          description: "Closed or Embargoed raids return a 403 response with an access\
            \ statement"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClosedRaid"
  /raid/{prefix}/{suffix}/history:
    parameters:
    - name: "prefix"
      in: "path"
      required: true
      description: "Prefix of the raid handle"
      schema:
        type: "string"
    - name: "suffix"
      in: "path"
      required: true
      description: "Suffix of the raid handle"
      schema:
        type: "string"
    get:
      security:
      - bearerAuth: []
      tags:
      - "raid"
      operationId: "raid-history"
      summary: "A list of base64 encoded changes to the raid in JSON Patch (RFC 6902)\
        \ format."
      responses:
        200:
          description: "success"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/RaidChange"
        403:
          description: "Closed or Embargoed raids return a 403 response with an access\
            \ statement"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClosedRaid"
  /raid/all-public:
    get:
      security:
      - bearerAuth: []
      tags:
      - "raid"
      operationId: "findAllPublicRaids"
      summary: "List raids"
      responses:
        200:
          description: "success"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/RaidDto"
  /service-point/:
    post:
      security:
      - bearerAuth: []
      tags:
      - "service-point"
      operationId: "createServicePoint"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServicePointCreateRequest"
      responses:
        201:
          description: "The service point was successfully created."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServicePoint"
        400:
          description: "There was a problem with the message sent to the server."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationFailureResponse"
    get:
      security:
      - bearerAuth: []
      tags:
      - "service-point"
      operationId: "findAllServicePoints"
      responses:
        200:
          description: "success"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ServicePoint"
  /service-point/{id}:
    parameters:
    - name: "id"
      in: "path"
      required: true
      description: "The id of the service point"
      schema:
        type: "integer"
        format: "int64"
    get:
      security:
      - bearerAuth: []
      tags:
      - "service-point"
      operationId: "findServicePointById"
      responses:
        200:
          description: "data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServicePoint"
    put:
      security:
      - bearerAuth: []
      tags:
      - "service-point"
      operationId: "updateServicePoint"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServicePointUpdateRequest"
      responses:
        200:
          description: "The service point was successfully updated."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServicePoint"
        400:
          description: "Bad request. There was a problem with the message sent to\
            \ the server."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationFailureResponse"
components:
  securitySchemes:
    bearerAuth:
      type: "http"
      scheme: "bearer"
      bearerFormat: "JWT"
  schemas:
    ClosedRaid:
      additionalProperties: false
      description: ""
      properties:
        access:
          $ref: "#/components/schemas/Access"
        id:
          type:
          - "string"
          - "null"
      required:
      - "id"
      - "access"
      title: "ClosedRaid"
      type: "object"
    RaidChange:
      type: "object"
      properties:
        handle:
          type: "string"
          example: "10.25.1.1/abcde"
        version:
          type: "integer"
        diff:
          type: "string"
          description: "A base64 encoded json patch (RFC 6902) representation of a\
            \ change to the raid."
        timestamp:
          type: "string"
          format: "date-time"
          description: "A timestamp of the change"
    ServicePointCreateRequest:
      type: "object"
      required:
      - "name"
      - "identifierOwner"
      - "groupId"
      properties:
        name:
          type: "string"
          description: "The name of the service point"
          example: "Australian Research Data Commons"
        adminEmail:
          type: "string"
          description: "The email address of the person responsible for administering\
            \ the service point."
        techEmail:
          type: "string"
          description: "The email address of a technical contact when using the API"
        identifierOwner:
          type: "string"
          description: "The PID of the institution that will own the RAiDs (currently\
            \ only RORs are supported)."
          example: "https://ror.org/038sjwq14"
        repositoryId:
          type: "string"
          description: "The Datacite repository id. This needs to be created in Fabrica."
          example: "VBGR.QJYTRX"
        groupId:
          type: "string"
          description: "The Keycloak group id (UUID) associated with the service point."
          example: "ba0b01a6-726f-464f-b501-454a10096826"
        prefix:
          type: "string"
          description: "The prefix used in the handle when minting RAiDs. Assigned\
            \ when the repository is created."
          example: "10.82481"
        password:
          type: "string"
          description: "The password of the repository in Datacite."
        appWritesEnabled:
          type: "boolean"
          description: "Whether users are able to edit RAiDs in the in the app. This\
            \ can cause conflicts when also creating/updating RAiDs through the API."
        enabled:
          type: "boolean"
          description: "Whether the service point is able to create or update RAiDs"
    ServicePointUpdateRequest:
      allOf:
      - $ref: "#/components/schemas/ServicePointCreateRequest"
      type: "object"
      required:
      - "id"
      properties:
        id:
          type: "integer"
          format: "int64"
          description: "The name of the service point"
          example: 1232323
    ServicePoint:
      description: "The response for all service point requests"
      type: "object"
      required:
      - "id"
      - "name"
      - "identifierOwner"
      - "adminEmail"
      - "techEmail"
      - "enabled"
      properties:
        id:
          $ref: "#/components/schemas/SurrogateKey"
        name:
          type: "string"
        identifierOwner:
          type: "string"
        repositoryId:
          type: "string"
          description: "The Datacite repository id. This needs to be created in Fabrica."
          example: "VBGR.QJYTRX"
        prefix:
          type: "string"
          description: "The prefix used in the handle when minting RAiDs. Assigned\
            \ when the repository is created."
          example: "10.82481"
        groupId:
          type: "string"
          description: "The Keycloak group id (UUID) associated with the service point."
          example: "ba0b01a6-726f-464f-b501-454a10096826"
        searchContent:
          type: "string"
        techEmail:
          type: "string"
        adminEmail:
          type: "string"
        enabled:
          type: "boolean"
        appWritesEnabled:
          type: "boolean"
    SurrogateKey:
      type: "integer"
      format: "int64"
    ValidationFailure:
      type: "object"
      required:
      - "fieldId"
      - "errorType"
      - "message"
      properties:
        fieldId:
          type: "string"
        errorType:
          type: "string"
        message:
          type: "string"
    FailureResponse:
      type: "object"
      required:
      - "type"
      - "title"
      - "status"
      - "detail"
      - "instance"
      properties:
        type:
          type: "string"
        title:
          type: "string"
        status:
          type: "integer"
        detail:
          type: "string"
        instance:
          type: "string"
    ValidationFailureResponse:
      allOf:
      - $ref: "#/components/schemas/FailureResponse"
      required:
      - "failures"
      properties:
        failures:
          type: "array"
          items:
            $ref: "#/components/schemas/ValidationFailure"
    AbstractRaidDynamicEnum:
      description: "This dynamic enumeration is part of the Research Activity Identifier\
        \ (RAiD) controlled lists available at https://vocabulary.raid.org/."
      title: "AbstractRaidDynamicEnum"
      type: "string"
    Access:
      additionalProperties: false
      description: "a metadata schema block containing RAiD access information"
      properties:
        embargoExpiry:
          description: "the date any embargo on access to the RAiD metadata ends"
          format: "date"
          type:
          - "string"
          - "null"
        statement:
          $ref: "#/components/schemas/AccessStatement"
          description: "a metadata schema block containing an explanation for any\
            \ access type that is not ‘open’, with the explanation’s associated properties"
        type:
          $ref: "#/components/schemas/AccessType"
          description: "a metadata schema block containing RAiD access type information"
      required:
      - "type"
      - "statement"
      title: "Access"
      type: "object"
    AccessStatement:
      additionalProperties: false
      description: "a metadata schema block containing an explanation for any access\
        \ type that is not ‘open’, with the explanation’s associated properties."
      properties:
        language:
          anyOf:
          - $ref: "#/components/schemas/Language"
          - type: "null"
          description: "a metadata schema block declaring the language of the text"
        text:
          description: "the text of an access statement that explains any restrictions\
            \ on access"
          type:
          - "string"
          - "null"
      title: "AccessStatement"
      type: "object"
    AccessType:
      additionalProperties: false
      description: ""
      properties:
        id:
          $ref: "#/components/schemas/AccessTypeIdEnum"
          description: "the type of access granted to a RAiD metadata record"
        schemaUri:
          $ref: "#/components/schemas/AccessTypeSchemaUriEnum"
          description: "the URI of the access type schema"
      required:
      - "id"
      - "schemaUri"
      title: "AccessType"
      type: "object"
    AccessTypeIdEnum:
      description: ""
      title: "AccessTypeIdEnum"
      type: "string"
    AccessTypeSchemaUriEnum:
      description: ""
      title: "AccessTypeSchemaUriEnum"
      type: "string"
    AlternateIdentifier:
      additionalProperties: false
      description: "a metadata schema block containing alternative local or global\
        \ identifiers for the project or activity associated with the RAiD"
      properties:
        id:
          description: "an identifier other than the RAiD applied to the project or\
            \ activity"
          pattern: "^\\s*\\S.*$"
          type: "string"
        type:
          description: "free text description of the type of alternateIdentifier supplied"
          type: "string"
      required:
      - "id"
      - "type"
      title: "AlternateIdentifier"
      type: "object"
    AlternateUrl:
      additionalProperties: false
      description: "a metadata schema block containing alternative URLs for the project"
      properties:
        url:
          description: "a link to another website related to the project or activity"
          pattern: "^\\s*\\S.*$"
          type: "string"
      required:
      - "url"
      title: "AlternateUrl"
      type: "object"
    Contributor:
      additionalProperties: false
      description: "a metadata schema block containing a contributor to a RAiD and\
        \ their associated properties"
      properties:
        contact:
          description: "flag indicating that the contributor as a project contact"
          type:
          - "boolean"
          - "null"
        email:
          type:
          - "string"
          - "null"
        id:
          description: "the contributor (person) associated with a project or activity\
            \ identified by a persistent identifier (PID)"
          type:
          - "string"
          - "null"
        leader:
          description: "flag indicating that the contributor as a project leader"
          type:
          - "boolean"
          - "null"
        position:
          description: "a metadata schema sub-block describing a contributor’s administrative\
            \ position on a project or activity"
          items:
            $ref: "#/components/schemas/ContributorPosition"
          type: "array"
        role:
          description: "metadata schema sub-block describing a contributor’s scientific\
            \ or scholarly role on a project using the CRediT vocabulary"
          items:
            $ref: "#/components/schemas/ContributorRole"
          type:
          - "array"
          - "null"
        schemaUri:
          $ref: "#/components/schemas/ContributorSchemaUriEnum"
          description: "the URI of the contributor identifier schema"
        status:
          type:
          - "string"
          - "null"
        statusMessage:
          type:
          - "string"
          - "null"
        uuid:
          type:
          - "string"
          - "null"
      required:
      - "schemaUri"
      - "position"
      title: "Contributor"
      type: "object"
    ContributorPosition:
      additionalProperties: false
      description: "a metadata schema sub-block describing a contributor’s administrative\
        \ position on a project or activity"
      properties:
        endDate:
          description: "date the contributor terminated position associated with the\
            \ project or activity"
          type:
          - "string"
          - "null"
        id:
          $ref: "#/components/schemas/ContributorPositionIdEnum"
          description: "a contributor’s administrative position in the project"
        schemaUri:
          $ref: "#/components/schemas/ContributorPositionSchemaUriEnum"
          description: "the URI of the position schema used"
        startDate:
          description: "date the contributor began position associated with the project\
            \ or activity"
          type: "string"
      required:
      - "startDate"
      - "id"
      - "schemaUri"
      title: "ContributorPosition"
      type: "object"
    ContributorPositionIdEnum:
      description: ""
      title: "ContributorPositionIdEnum"
      type: "string"
    ContributorPositionSchemaUriEnum:
      description: ""
      title: "ContributorPositionSchemaUriEnum"
      type: "string"
    ContributorRole:
      additionalProperties: false
      description: ""
      properties:
        id:
          $ref: "#/components/schemas/ContributorRoleIdEnum"
          description: "a contributor’s (person) role(s) on the Project"
        schemaUri:
          $ref: "#/components/schemas/ContributorRoleSchemaUriEnum"
          description: "the URI of the role schema used"
      required:
      - "id"
      - "schemaUri"
      title: "ContributorRole"
      type: "object"
    ContributorRoleIdEnum:
      description: ""
      title: "ContributorRoleIdEnum"
      type: "string"
    ContributorRoleSchemaUriEnum:
      description: ""
      title: "ContributorRoleSchemaUriEnum"
      type: "string"
    ContributorSchemaUriEnum:
      description: ""
      title: "ContributorSchemaUriEnum"
      type: "string"
    ContributorStatusEnum:
      description: ""
      enum:
      - "UNVERIFIED"
      title: "ContributorStatusEnum"
      type: "string"
    Date:
      additionalProperties: false
      description: "Metadata schema block containing the start and end date of the\
        \ RAiD."
      properties:
        endDate:
          description: "the project or activity’s end date"
          type:
          - "string"
          - "null"
        startDate:
          description: "the project or activity’s start date"
          pattern: "^\\s*\\S.*$"
          type: "string"
      required:
      - "startDate"
      title: "Date"
      type: "object"
    Description:
      additionalProperties: false
      description: "a metadata schema block containing the description of the RAiD\
        \ and associated properties"
      properties:
        language:
          anyOf:
          - $ref: "#/components/schemas/Language"
          - type: "null"
          description: "a metadata schema block declaring the language of the text"
        text:
          description: "the text of an access statement that explains any restrictions\
            \ on access"
          pattern: "^\\s*\\S.*$"
          type: "string"
        type:
          $ref: "#/components/schemas/DescriptionType"
          description: "a metadata schema block declaring the type of description"
      required:
      - "type"
      - "text"
      title: "Description"
      type: "object"
    DescriptionType:
      additionalProperties: false
      description: "a metadata schema block declaring the type of description"
      properties:
        id:
          $ref: "#/components/schemas/DescriptionTypeIdEnum"
          description: "the type of description."
        schemaUri:
          $ref: "#/components/schemas/DescriptionTypeSchemaURIEnum"
          description: "the URI of the description type schema"
      required:
      - "id"
      - "schemaUri"
      title: "DescriptionType"
      type: "object"
    DescriptionTypeIdEnum:
      description: ""
      title: "DescriptionTypeIdEnum"
      type: "string"
    DescriptionTypeSchemaURIEnum:
      description: ""
      title: "DescriptionTypeSchemaURIEnum"
      type: "string"
    Id:
      additionalProperties: false
      description: "a metadata schema block containing the RAiD name and associated\
        \ properties."
      properties:
        id:
          description: "The identifier of the raid, e.g. https://raid.org.au/102.100.100/zzz"
          type: "string"
        license:
          description: "The license under which the RAiD Metadata Record associated\
            \ with this Identifier has been issued."
          type: "string"
        owner:
          $ref: "#/components/schemas/Owner"
          description: "a metadata schema sub-block that declares the owner of the\
            \ RAiD (i.e. the organisation requesting the RAiD)"
        raidAgencyUrl:
          description: "The URL for the raid via the minting raid agency system\n"
          type:
          - "string"
          - "null"
        registrationAgency:
          $ref: "#/components/schemas/RegistrationAgency"
          description: "metadata schema sub-block declaring the Registration Agency\
            \ that minted the RAiD."
        schemaUri:
          $ref: "#/components/schemas/RaidIdentifierSchemaURIEnum"
          description: "The URI of the Identifier scheme. For example, https://raid.org"
        version:
          description: "The version of the resource. Read-only. Increments automatically\
            \ on update."
          type: "integer"
      required:
      - "id"
      - "schemaUri"
      - "registrationAgency"
      - "owner"
      - "license"
      - "version"
      title: "Id"
      type: "object"
    Language:
      additionalProperties: false
      description: ""
      properties:
        id:
          description: "the language used for the access statement text, identified\
            \ by a code or other identifier"
          pattern: "^\\s*\\S.*$"
          type: "string"
        schemaUri:
          $ref: "#/components/schemas/LanguageSchemaURIEnum"
          description: "the URI of the language identifier schema"
      required:
      - "id"
      - "schemaUri"
      title: "Language"
      type: "object"
    LanguageSchemaURIEnum:
      description: ""
      title: "LanguageSchemaURIEnum"
      type: "string"
    Metadata:
      additionalProperties: false
      description: ""
      properties:
        created:
          type:
          - "number"
          - "null"
        raidModelVersion:
          type:
          - "string"
          - "null"
        updated:
          type:
          - "number"
          - "null"
      title: "Metadata"
      type: "object"
    Organisation:
      additionalProperties: false
      description: "a metadata schema block containing the organisation associated\
        \ with a RAiD and its associated properties"
      properties:
        id:
          description: "an organisation associated with a project or activity"
          pattern: "^\\s*\\S.*$"
          type: "string"
        role:
          description: "a metadata schema sub-block describing an organisation’s role\
            \ on a project"
          items:
            $ref: "#/components/schemas/OrganisationRole"
          type: "array"
        schemaUri:
          $ref: "#/components/schemas/OrganizationSchemaUriEnum"
          description: "the URI of the organisation identifier schema"
      required:
      - "id"
      - "schemaUri"
      - "role"
      title: "Organisation"
      type: "object"
    OrganisationRole:
      additionalProperties: false
      description: "a metadata schema sub-block describing an organisation’s role\
        \ on a project"
      properties:
        endDate:
          description: "the date that the organisation terminated a role associated\
            \ with the project or activity"
          type:
          - "string"
          - "null"
        id:
          $ref: "#/components/schemas/OrganizationRoleIdEnum"
          description: "the organisation’s role"
        schemaUri:
          $ref: "#/components/schemas/OrganizationRoleSchemaUriEnum"
          description: "the URI of the role schema used"
        startDate:
          description: "the date that the organisation began a role associated with\
            \ the project or activity"
          pattern: "^\\s*\\S.*$"
          type: "string"
      required:
      - "startDate"
      - "id"
      - "schemaUri"
      title: "OrganisationRole"
      type: "object"
    OrganizationRoleIdEnum:
      description: ""
      title: "OrganizationRoleIdEnum"
      type: "string"
    OrganizationRoleSchemaUriEnum:
      description: ""
      title: "OrganizationRoleSchemaUriEnum"
      type: "string"
    OrganizationSchemaUriEnum:
      description: ""
      title: "OrganizationSchemaUriEnum"
      type: "string"
    Owner:
      additionalProperties: false
      description: ""
      properties:
        id:
          description: "the persistent identifier of the legal entity responsible\
            \ for the RAiD (i.e. the ‘owner’ of a RAiD); as recognised by their Registration\
            \ Agency"
          pattern: "^https:\\/\\/ror[.]org/.*$"
          type: "string"
        schemaUri:
          $ref: "#/components/schemas/RegistrationAgencySchemaURIEnum"
          description: "the URI of the identifier scheme that is used to identify\
            \ RAiD owners"
        servicePoint:
          description: "the Service Point (SP) that requested the RAiD. SPs belong\
            \ to an owner, RAiD owners can have multiple SPs; SPs do not need to be\
            \ legal entities"
          type: "number"
      required:
      - "id"
      - "schemaUri"
      - "servicePoint"
      title: "Owner"
      type: "object"
    RaidCreateRequest:
      additionalProperties: false
      description: ""
      properties:
        access:
          $ref: "#/components/schemas/Access"
        alternateIdentifier:
          items:
            $ref: "#/components/schemas/AlternateIdentifier"
          type:
          - "array"
          - "null"
        alternateUrl:
          items:
            $ref: "#/components/schemas/AlternateUrl"
          type:
          - "array"
          - "null"
        contributor:
          items:
            $ref: "#/components/schemas/Contributor"
          type: "array"
        date:
          $ref: "#/components/schemas/Date"
        description:
          items:
            $ref: "#/components/schemas/Description"
          type:
          - "array"
          - "null"
        identifier:
          anyOf:
          - $ref: "#/components/schemas/Id"
          - type: "null"
        metadata:
          anyOf:
          - $ref: "#/components/schemas/Metadata"
          - type: "null"
        organisation:
          items:
            $ref: "#/components/schemas/Organisation"
          type:
          - "array"
          - "null"
        relatedObject:
          items:
            $ref: "#/components/schemas/RelatedObject"
          type:
          - "array"
          - "null"
        relatedRaid:
          items:
            $ref: "#/components/schemas/RelatedRaid"
          type:
          - "array"
          - "null"
        spatialCoverage:
          description: "metadata schema block containing information about any spatial\
            \ region(s) or named place(s) targeted by the project"
          items:
            $ref: "#/components/schemas/SpatialCoverage"
          type:
          - "array"
          - "null"
        subject:
          description: "metadata schema block containing the subject area of the RAiD\
            \ plus associated properties"
          items:
            $ref: "#/components/schemas/Subject"
          type:
          - "array"
          - "null"
        title:
          items:
            $ref: "#/components/schemas/Title"
          type: "array"
        traditionalKnowledgeLabel:
          description: "metadata schema block containing information about Traditional\
            \ Knowledge / Biocultural Labels and Notices"
          items:
            $ref: "#/components/schemas/TraditionalKnowledgeLabel"
          type:
          - "array"
          - "null"
      required:
      - "title"
      - "date"
      - "access"
      - "contributor"
      title: "RaidCreateRequest"
      type: "object"
    RaidDto:
      additionalProperties: false
      description: ""
      properties:
        access:
          $ref: "#/components/schemas/Access"
        alternateIdentifier:
          items:
            $ref: "#/components/schemas/AlternateIdentifier"
          type:
          - "array"
          - "null"
        alternateUrl:
          items:
            $ref: "#/components/schemas/AlternateUrl"
          type:
          - "array"
          - "null"
        contributor:
          items:
            $ref: "#/components/schemas/Contributor"
          type: "array"
        date:
          $ref: "#/components/schemas/Date"
        description:
          items:
            $ref: "#/components/schemas/Description"
          type:
          - "array"
          - "null"
        identifier:
          $ref: "#/components/schemas/Id"
        metadata:
          $ref: "#/components/schemas/Metadata"
        organisation:
          items:
            $ref: "#/components/schemas/Organisation"
          type:
          - "array"
          - "null"
        relatedObject:
          items:
            $ref: "#/components/schemas/RelatedObject"
          type:
          - "array"
          - "null"
        relatedRaid:
          items:
            $ref: "#/components/schemas/RelatedRaid"
          type:
          - "array"
          - "null"
        spatialCoverage:
          description: "metadata schema block containing information about any spatial\
            \ region(s) or named place(s) targeted by the project"
          items:
            $ref: "#/components/schemas/SpatialCoverage"
          type:
          - "array"
          - "null"
        subject:
          description: "metadata schema block containing the subject area of the RAiD\
            \ plus associated properties"
          items:
            $ref: "#/components/schemas/Subject"
          type:
          - "array"
          - "null"
        title:
          items:
            $ref: "#/components/schemas/Title"
          type: "array"
        traditionalKnowledgeLabel:
          description: "metadata schema block containing information about Traditional\
            \ Knowledge / Biocultural Labels and Notices"
          items:
            $ref: "#/components/schemas/TraditionalKnowledgeLabel"
          type:
          - "array"
          - "null"
      required:
      - "metadata"
      - "title"
      - "date"
      - "access"
      - "contributor"
      - "identifier"
      title: "RaidDto"
      type: "object"
    RaidIdentifierSchemaURIEnum:
      description: ""
      title: "RaidIdentifierSchemaURIEnum"
      type: "string"
    RaidPatchRequest:
      additionalProperties: false
      description: ""
      properties:
        contributor:
          items:
            $ref: "#/components/schemas/Contributor"
          type: "array"
      required:
      - "contributor"
      title: "RaidPatchRequest"
      type: "object"
    RaidUpdateRequest:
      additionalProperties: false
      description: ""
      properties:
        access:
          $ref: "#/components/schemas/Access"
        alternateIdentifier:
          items:
            $ref: "#/components/schemas/AlternateIdentifier"
          type:
          - "array"
          - "null"
        alternateUrl:
          items:
            $ref: "#/components/schemas/AlternateUrl"
          type:
          - "array"
          - "null"
        contributor:
          items:
            $ref: "#/components/schemas/Contributor"
          type: "array"
        date:
          $ref: "#/components/schemas/Date"
        description:
          items:
            $ref: "#/components/schemas/Description"
          type:
          - "array"
          - "null"
        identifier:
          anyOf:
          - $ref: "#/components/schemas/Id"
          - type: "null"
        metadata:
          anyOf:
          - $ref: "#/components/schemas/Metadata"
          - type: "null"
        organisation:
          items:
            $ref: "#/components/schemas/Organisation"
          type:
          - "array"
          - "null"
        relatedObject:
          items:
            $ref: "#/components/schemas/RelatedObject"
          type:
          - "array"
          - "null"
        relatedRaid:
          items:
            $ref: "#/components/schemas/RelatedRaid"
          type:
          - "array"
          - "null"
        spatialCoverage:
          description: "metadata schema block containing information about any spatial\
            \ region(s) or named place(s) targeted by the project"
          items:
            $ref: "#/components/schemas/SpatialCoverage"
          type:
          - "array"
          - "null"
        subject:
          description: "metadata schema block containing the subject area of the RAiD\
            \ plus associated properties"
          items:
            $ref: "#/components/schemas/Subject"
          type:
          - "array"
          - "null"
        title:
          items:
            $ref: "#/components/schemas/Title"
          type: "array"
        traditionalKnowledgeLabel:
          description: "metadata schema block containing information about Traditional\
            \ Knowledge / Biocultural Labels and Notices"
          items:
            $ref: "#/components/schemas/TraditionalKnowledgeLabel"
          type:
          - "array"
          - "null"
      required:
      - "title"
      - "date"
      - "access"
      - "contributor"
      title: "RaidUpdateRequest"
      type: "object"
    RegistrationAgency:
      additionalProperties: false
      description: "metadata schema sub-block declaring the Registration Agency that\
        \ minted the RAiD."
      properties:
        id:
          description: "the persistent identifier of the RAiD Registration Agency\
            \ that minted the RAiD"
          pattern: "^https:\\/\\/ror[.]org/.*$"
          type: "string"
        schemaUri:
          $ref: "#/components/schemas/RegistrationAgencySchemaURIEnum"
          description: "the URI of the identifier scheme that is used to identify\
            \ RAiD Registration Agencies"
      required:
      - "id"
      - "schemaUri"
      title: "RegistrationAgency"
      type: "object"
    RegistrationAgencySchemaURIEnum:
      description: ""
      title: "RegistrationAgencySchemaURIEnum"
      type: "string"
    RelatedObject:
      additionalProperties: false
      description: "a metadata schema block containing inputs, outputs, and process\
        \ documents related to a RAiD plus associated properties"
      properties:
        category:
          description: "a metadata schema sub-block declaring that a relatedObject\
            \ is an input, output and/or process document"
          items:
            $ref: "#/components/schemas/RelatedObjectCategory"
          type: "array"
        id:
          description: "any (a) input or resource used by a project or activity, (b)\
            \ output or product created by a project or activity, and/or (c) internal\
            \ process documentation used within a project or activity, that is identified\
            \ by a persistent identifier (PID)."
          pattern: "^\\s*\\S.*$"
          type: "string"
        schemaUri:
          $ref: "#/components/schemas/RelatedObjectSchemaUriEnum"
          description: "The URI of the relatedObject identifier schema"
        type:
          $ref: "#/components/schemas/RelatedObjectType"
          description: "a metadata schema sub-block describing a relatedObject’s type"
      required:
      - "id"
      - "schemaUri"
      - "type"
      - "category"
      title: "RelatedObject"
      type: "object"
    RelatedObjectCategory:
      additionalProperties: false
      description: "a metadata schema sub-block declaring that a relatedObject is\
        \ an input, output and/or process document"
      properties:
        id:
          $ref: "#/components/schemas/RelatedObjectCategoryIdEnum"
          description: "a declaration of an object as an input, output, or other"
        schemaUri:
          $ref: "#/components/schemas/RelatedObjectCategorySchemaUriEnum"
          description: "the URI of the category schema used."
      required:
      - "id"
      - "schemaUri"
      title: "RelatedObjectCategory"
      type: "object"
    RelatedObjectCategoryIdEnum:
      description: ""
      title: "RelatedObjectCategoryIdEnum"
      type: "string"
    RelatedObjectCategorySchemaUriEnum:
      description: ""
      title: "RelatedObjectCategorySchemaUriEnum"
      type: "string"
    RelatedObjectSchemaUriEnum:
      description: ""
      title: "RelatedObjectSchemaUriEnum"
      type: "string"
    RelatedObjectType:
      additionalProperties: false
      description: "a metadata schema sub-block describing a relatedObject’s type"
      properties:
        id:
          $ref: "#/components/schemas/RelatedObjectTypeIdEnum"
          description: "a type of input, output, or process document"
        schemaUri:
          $ref: "#/components/schemas/RelatedObjectTypeSchemaUriEnum"
          description: "the URI of the type schema used"
      required:
      - "id"
      - "schemaUri"
      title: "RelatedObjectType"
      type: "object"
    RelatedObjectTypeIdEnum:
      description: ""
      title: "RelatedObjectTypeIdEnum"
      type: "string"
    RelatedObjectTypeSchemaUriEnum:
      description: ""
      title: "RelatedObjectTypeSchemaUriEnum"
      type: "string"
    RelatedRaid:
      additionalProperties: false
      description: "a metadata schema block containing related RAiDs and qualifying\
        \ the relationship"
      properties:
        id:
          description: "a subsidiary or otherwise related RAiD"
          pattern: "^\\s*\\S.*$"
          type: "string"
        type:
          $ref: "#/components/schemas/RelatedRaidType"
          description: "a metadata schema sub-block qualifying the relationship with\
            \ a related Raid"
      required:
      - "id"
      - "type"
      title: "RelatedRaid"
      type: "object"
    RelatedRaidType:
      additionalProperties: false
      description: "a metadata schema sub-block qualifying the relationship with a\
        \ related Raid"
      properties:
        id:
          $ref: "#/components/schemas/RelatedRaidTypeIdEnum"
          description: "a description of the relationship between the activity being\
            \ registered and the related resource"
        schemaUri:
          $ref: "#/components/schemas/RelatedRaidTypeSchemaUriEnum"
          description: "The URI of the relationship schema used"
      required:
      - "id"
      - "schemaUri"
      title: "RelatedRaidType"
      type: "object"
    RelatedRaidTypeIdEnum:
      description: ""
      title: "RelatedRaidTypeIdEnum"
      type: "string"
    RelatedRaidTypeSchemaUriEnum:
      description: ""
      title: "RelatedRaidTypeSchemaUriEnum"
      type: "string"
    SpatialCoverage:
      additionalProperties: false
      description: "metadata schema block containing information about any spatial\
        \ region(s) or named place(s) targeted by the project"
      properties:
        id:
          description: "spatial region or named place that is the subject or target\
            \ of the project or activity. Repeat this property as necessary to indicate\
            \ different locations. Do not duplicate organisational locations"
          type: "string"
        place:
          description: "metadata schema sub-block containing free-text place names\
            \ or descriptions plus associated metadata properties"
          items:
            $ref: "#/components/schemas/SpatialCoveragePlace"
          type:
          - "array"
          - "null"
        schemaUri:
          $ref: "#/components/schemas/SpatialCoverageSchemaUriEnum"
          description: "the URI of the geolocation schema used for spatialCoverage"
      required:
      - "id"
      - "schemaUri"
      title: "SpatialCoverage"
      type: "object"
    SpatialCoveragePlace:
      additionalProperties: false
      description: "metadata schema sub-block containing free-text place names or\
        \ descriptions plus associated metadata properties"
      properties:
        language:
          anyOf:
          - $ref: "#/components/schemas/Language"
          - type: "null"
          description: "a metadata schema block declaring the language of the text"
        text:
          description: "free text description of one or more geographic locations\
            \ that are the subject or target of the project or activity; use to specify\
            \ or describe a geographic location in a manner not covered by spatialCoverage.id"
          type:
          - "string"
          - "null"
      title: "SpatialCoveragePlace"
      type: "object"
    SpatialCoverageSchemaUriEnum:
      description: ""
      title: "SpatialCoverageSchemaUriEnum"
      type: "string"
    Subject:
      additionalProperties: false
      description: "metadata schema block containing the subject area of the RAiD\
        \ plus associated properties"
      properties:
        id:
          description: "identifier (URI) for a subject area or classification code\
            \ describing the project or activity"
          type:
          - "string"
          - "null"
        keyword:
          description: "metadata schema sub-block containing free-text keyword describing\
            \ a project plus associated properties"
          items:
            $ref: "#/components/schemas/SubjectKeyword"
          type:
          - "array"
          - "null"
        schemaUri:
          $ref: "#/components/schemas/SubjectSchemaURIEnum"
          description: "the URI of the subject identifier schema"
      title: "Subject"
      type: "object"
    SubjectKeyword:
      additionalProperties: false
      description: "metadata schema sub-block containing free-text keyword describing\
        \ a project plus associated properties"
      properties:
        annotations: {}
        language:
          anyOf:
          - $ref: "#/components/schemas/Language"
          - type: "null"
          description: "a metadata schema block declaring the language of the text"
        text:
          description: "unconstrained keyword or key phrase describing the project\
            \ or activity"
          type:
          - "string"
          - "null"
      title: "SubjectKeyword"
      type: "object"
    SubjectSchemaURIEnum:
      description: ""
      title: "SubjectSchemaURIEnum"
      type: "string"
    Title:
      additionalProperties: false
      description: "a metadata schema block containing the title of the RAiD and associated\
        \ properties"
      properties:
        endDate:
          description: "the date the project or activity title was changed or stopped\
            \ being used"
          pattern: "^\\s*\\S.*$"
          type:
          - "string"
          - "null"
        language:
          anyOf:
          - $ref: "#/components/schemas/Language"
          - type: "null"
          description: "a metadata schema block declaring the language of the text"
        startDate:
          description: "the date the project or activity’s title began being used"
          pattern: "^\\s*\\S.*$"
          type: "string"
        text:
          description: "a name or title by which the project or activity is known"
          pattern: "^\\s*\\S.*$"
          type: "string"
        type:
          $ref: "#/components/schemas/TitleType"
          description: "a metadata schema block containing information about the title\
            \ type"
      required:
      - "startDate"
      - "text"
      - "type"
      title: "Title"
      type: "object"
    TitleType:
      additionalProperties: false
      description: ""
      properties:
        id:
          $ref: "#/components/schemas/TitleTypeIdEnum"
        schemaUri:
          $ref: "#/components/schemas/TitleTypeSchemaURIEnum"
      required:
      - "id"
      - "schemaUri"
      title: "TitleType"
      type: "object"
    TitleTypeIdEnum:
      description: ""
      title: "TitleTypeIdEnum"
      type: "string"
    TitleTypeSchemaURIEnum:
      description: ""
      title: "TitleTypeSchemaURIEnum"
      type: "string"
    TraditionalKnowledgeLabel:
      additionalProperties: false
      description: "metadata schema block containing information about Traditional\
        \ Knowledge / Biocultural Labels and Notices"
      properties:
        id:
          description: "identifier (URI) linking to a verified source for Traditional\
            \ Knowledge (TK) or Biocultural (BC) Labels or Notices pertaining to a\
            \ project or activity"
          type:
          - "string"
          - "null"
        schemaUri:
          $ref: "#/components/schemas/TraditionalKnowledgeLabelSchemaUriEnum"
          description: "the URI of the Traditional Knowledge or Biocultural label\
            \ identifier schema"
      title: "TraditionalKnowledgeLabel"
      type: "object"
    TraditionalKnowledgeLabelSchemaUriEnum:
      description: ""
      title: "TraditionalKnowledgeLabelSchemaUriEnum"
      type: "string"
    AlternativeIdentifierPropertyEnum:
      description: ""
      enum:
      - "https://datamodel.raid.org/core/alternativeIdentifier"
      title: "AlternativeIdentifierPropertyEnum"
      type: "string"
    AlternativeIdentifierSchemaOrg:
      additionalProperties: false
      description: ""
      properties:
        additionalType:
          type:
          - "string"
          - "null"
        propertyID:
          $ref: "#/components/schemas/AlternativeIdentifierPropertyEnum"
        value:
          type: "string"
      required:
      - "value"
      - "propertyID"
      title: "AlternativeIdentifierSchemaOrg"
      type: "object"
    Any:
      additionalProperties: true
      description: ""
      title: "Any"
      type:
      - "null"
      - "boolean"
      - "object"
      - "number"
      - "string"
    ContributorPositionSchemaOrg:
      additionalProperties: false
      description: ""
      properties:
        endDate:
          format: "date"
          type:
          - "string"
          - "null"
        member:
          $ref: "#/components/schemas/PersonSchemaOrg"
        roleName:
          type: "string"
        startDate:
          format: "date"
          type:
          - "string"
          - "null"
      required:
      - "roleName"
      - "member"
      title: "ContributorPositionSchemaOrg"
      type: "object"
    ContributorRoleSchemaOrg:
      additionalProperties: false
      description: ""
      properties:
        member:
          $ref: "#/components/schemas/PersonSchemaOrg"
        roleName:
          type: "string"
      required:
      - "roleName"
      - "member"
      title: "ContributorRoleSchemaOrg"
      type: "object"
    DescriptionSchemaOrg:
      additionalProperties: false
      description: ""
      properties:
        additionalType:
          type:
          - "string"
          - "null"
        inLanguage:
          type:
          - "string"
          - "null"
      title: "DescriptionSchemaOrg"
      type: "object"
    OrganisationRoleSchemaOrg:
      additionalProperties: false
      description: ""
      properties:
        endDate:
          format: "date"
          type:
          - "string"
          - "null"
        member:
          $ref: "#/components/schemas/OrganisationSchemaOrg"
        roleName:
          type: "string"
        startDate:
          format: "date"
          type: "string"
      required:
      - "roleName"
      - "startDate"
      - "member"
      title: "OrganisationRoleSchemaOrg"
      type: "object"
    OrganisationSchemaOrg:
      additionalProperties: false
      description: ""
      properties:
        identifier:
          type: "string"
      required:
      - "identifier"
      title: "OrganisationSchemaOrg"
      type: "object"
    OwnerPropertyEnum:
      description: ""
      enum:
      - "https://datamodel.raid.org/core/owner"
      title: "OwnerPropertyEnum"
      type: "string"
    OwnerSchemaOrg:
      additionalProperties: false
      description: ""
      properties:
        propertyID:
          $ref: "#/components/schemas/OwnerPropertyEnum"
        value:
          type: "string"
      required:
      - "value"
      - "propertyID"
      title: "OwnerSchemaOrg"
      type: "object"
    PersonSchemaOrg:
      additionalProperties: false
      description: ""
      properties:
        email:
          type:
          - "string"
          - "null"
        identifier:
          items:
            type: "string"
          type:
          - "array"
          - "null"
        memberOf:
          description: "Value is the ResearchProject.Identifier.id"
          type: "string"
      required:
      - "memberOf"
      title: "PersonSchemaOrg"
      type: "object"
    RegistrationAgencyPropertyEnum:
      description: ""
      enum:
      - "https://datamodel.raid.org/core/registrationAgency"
      title: "RegistrationAgencyPropertyEnum"
      type: "string"
    RegistrationAgencySchemaOrg:
      additionalProperties: false
      description: ""
      properties:
        propertyID:
          $ref: "#/components/schemas/RegistrationAgencyPropertyEnum"
        value:
          type: "string"
      required:
      - "value"
      - "propertyID"
      title: "RegistrationAgencySchemaOrg"
      type: "object"
    RelatedObjectSchemaOrg:
      additionalProperties: false
      description: ""
      properties:
        additionalType:
          items:
            type: "string"
          type:
          - "array"
          - "null"
        url:
          type: "string"
      required:
      - "url"
      title: "RelatedObjectSchemaOrg"
      type: "object"
    RelatedRaidSchemaOrg:
      additionalProperties: false
      description: ""
      properties:
        additionalType:
          type:
          - "string"
          - "null"
        identifier:
          type: "string"
      required:
      - "identifier"
      title: "RelatedRaidSchemaOrg"
      type: "object"
    ResearchProject:
      additionalProperties: false
      description: ""
      properties:
        additionalProperty:
          items:
            anyOf:
            - $ref: "#/components/schemas/RegistrationAgencySchemaOrg"
            - $ref: "#/components/schemas/OwnerSchemaOrg"
            - $ref: "#/components/schemas/TraditionalKnowledgeLabelSchemaOrg"
          type:
          - "array"
          - "null"
        alternateName:
          description: "Other than current primary title value"
          type:
          - "string"
          - "null"
        description:
          description: "Primary description or the only description is added as string."
          items:
            anyOf:
            - type: "string"
            - $ref: "#/components/schemas/DescriptionSchemaOrg"
          type:
          - "array"
          - "null"
        dissolutionDate:
          format: "date"
          type:
          - "string"
          - "null"
        foundingDate:
          format: "date"
          type: "string"
        identifier:
          items:
            anyOf:
            - type: "string"
            - $ref: "#/components/schemas/AlternativeIdentifierSchemaOrg"
          type: "array"
        isRelatedTo:
          anyOf:
          - $ref: "#/components/schemas/RelatedObjectSchemaOrg"
          - $ref: "#/components/schemas/RelatedRaidSchemaOrg"
          - type: "null"
        keywords:
          anyOf:
          - $ref: "#/components/schemas/SubjectSchemaOrg"
          - type: "null"
        location:
          anyOf:
          - $ref: "#/components/schemas/SpatialCoverageSchemaOrg"
          - type: "null"
        member:
          items:
            anyOf:
            - $ref: "#/components/schemas/PersonSchemaOrg"
            - $ref: "#/components/schemas/OrganisationSchemaOrg"
          type:
          - "array"
          - "null"
        member_of:
          items:
            anyOf:
            - $ref: "#/components/schemas/ContributorPositionSchemaOrg"
            - $ref: "#/components/schemas/ContributorRoleSchemaOrg"
            - $ref: "#/components/schemas/OrganisationRoleSchemaOrg"
          type:
          - "array"
          - "null"
        name:
          description: "Latest primary title value"
          type: "string"
        url:
          type:
          - "string"
          - "null"
      required:
      - "identifier"
      - "foundingDate"
      - "name"
      title: "ResearchProject"
      type: "object"
    SpatialCoverageSchemaOrg:
      additionalProperties: false
      description: ""
      properties:
        identifier:
          type: "string"
        name:
          type:
          - "string"
          - "null"
      required:
      - "identifier"
      title: "SpatialCoverageSchemaOrg"
      type: "object"
    SubjectSchemaOrg:
      additionalProperties: false
      description: ""
      properties:
        alternateName:
          items:
            type: "string"
          type:
          - "array"
          - "null"
        inDefinedTermSet:
          type: "string"
        termCode:
          type: "string"
      required:
      - "termCode"
      - "inDefinedTermSet"
      title: "SubjectSchemaOrg"
      type: "object"
    TraditionalKnowledgeLabelPropertyEnum:
      description: ""
      enum:
      - "https://datamodel.raid.org/core/traditionalKnowledgeLabel"
      title: "TraditionalKnowledgeLabelPropertyEnum"
      type: "string"
    TraditionalKnowledgeLabelSchemaOrg:
      additionalProperties: false
      description: ""
      properties:
        propertyID:
          $ref: "#/components/schemas/TraditionalKnowledgeLabelPropertyEnum"
        value:
          type: "string"
      required:
      - "value"
      - "propertyID"
      title: "TraditionalKnowledgeLabelSchemaOrg"
      type: "object"
