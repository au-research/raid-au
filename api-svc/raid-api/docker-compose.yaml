version: '3.4'
include:
  - '../../iam/docker-compose.yaml'
services:
  raid-api-db:
    image: postgres:16.2
    ports:
      - 7432:5432
    environment:
      POSTGRES_PASSWORD: supersecret
      POSTGRES_DB: raido
    volumes:
      - '../db/src/main/resources/db/env/api_user:/docker-entrypoint-initdb.d'
#  raid-iam-db:
#    image: postgres:16.2
#    ports:
#      - 5432:5432
#    environment:
#      POSTGRES_USER: keycloak
#      POSTGRES_PASSWORD: keycloak
#      POSTGRES_DB: keycloak
#  raid-iam:
#    depends_on:
#      - raid-iam-db
#    image: 576003565477.dkr.ecr.ap-southeast-2.amazonaws.com/raid-iam:01c3803773b5d0b98ab76e87de37eec7071b060e
#    ports:
#      - 9080:8080
#      - 9443:8443
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
#      interval: 5s
#      timeout: 5s
#      retries: 50
#    command: [ 'start-dev', '--import-realm', '--debug' ]
#    volumes:
#      - './docker-compose/realms:/opt/keycloak/data/import'
#    environment:
#      KEYCLOAK_ADMIN: admin
#      KEYCLOAK_ADMIN_PASSWORD: admin
#      KC_HEALTH_ENABLED: true
##      KC_HOSTNAME: raid-iam
##      KC_HOSTNAME_ADMIN: localhost
#      KC_DB: postgres
#      KC_DB_USERNAME: keycloak
#      KC_DB_PASSWORD: keycloak
#      KC_DB_URL_DATABASE: keycloak
#      KC_DB_URL_HOST: raid-iam-db
#      KC_DB_URL_PORT: 5432
#      KC_DB_SCHEMA: public
#      KC_HOSTNAME_STRICT: false
#      KC_HTTP_ENABLED: true
#      KC_PROXY_HEADERS: xforwarded
#      #      DEBUG: true
#      #      DEBUG_PORT: '*:9000'
#      KC_LOG_LEVEL: info,au.org.raid.iam:debug,org.keycloak.services.cors:debug
  raid-api:
    depends_on:
      raid-iam:
        condition: service_healthy
      raid-api-db:
        condition: service_started
#    image: 576003565477.dkr.ecr.ap-southeast-2.amazonaws.com/raid-api:01c3803773b5d0b98ab76e87de37eec7071b060e
#    image: raid-api:latest
    build:
      dockerfile: ./Dockerfile
    ports:
      - 8080:8080
    environment:
      EnvironmentConfig.envName: DEV
      ENVIRONMENT_NAME: dev
      EnvironmentConfig.isProd: false
      orcid.in-memory-stub: true
      ror.in-memory-stub: true
      doi.in-memory-stub: true
      geonames.in-memory-stub: true
      openstreetmap.in-memory-stub: false
      spring.flyway.locations: classpath:db/env/api_user,classpath:db/migration,classpath:db/env/local
      logging.level.au.org.raid: debug
      logging.level.org.springframework.security: debug
      raid.identifier.landing-prefix: https://raid.org/
      raid.identifier.handle-url-prefix: https://test.static.raid.org.au/
      spring.security.oauth2.client.registration.keycloak.client-id: raid-api-2
#      raid.validation.geonames.username: EcsSecret.fromSecretsManager(secrets.geoNamesUsername)
      spring.flyway.user: postgres
      spring.flyway.password: supersecret
      raid.db.encryption-key: pB7MB3iuYmmjWMTOCK6HS0JetzWhCtBtKoNl39pBr3Q=
      raid.db.host: raid-api-db
      raid.db.port: 5432
      raid.iam.realm-uri: http://raid-iam:8080/realms/raid
#  nginx:
#    depends_on:
#      raid-iam:
#        condition: service_healthy
#    image: nginx:1.27.0-alpine
#    volumes:
#      - ./docker-compose/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
#    ports:
#      - 8001:8001
