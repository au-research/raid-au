---
import type { RaidDto } from "@/generated/raid";
import { raids } from "@/store/raids";

export async function getStaticPaths() {
  return raids.map((el: RaidDto) => {
    const [_, prefix, suffix] = new URL(el.identifier.id).pathname.split("/");
    return {
      params: {
        prefix,
        suffix,
      },
      props: {
        raid: el,
      },
    };
  });
}

const { prefix, suffix }: { prefix: string; suffix: string } = Astro.params;
const { raid }: { raid: RaidDto } = Astro.props;

const handles = new Set();
for (const raid in raids) {
  const pathname = new URL(raids[raid].identifier.id).pathname;
  const [, prefix, suffix] = pathname.split("/");
  handles.add(`${prefix}/${suffix}`);
}

const headers = new Headers({
  "Access-Control-Allow-Origin": "*",
  "Access-Control-Allow-Methods": "GET, OPTIONS",
  "Access-Control-Allow-Headers": "Content-Type",
  "Content-Type": "application/json",
});

if (Astro.request.method === "OPTIONS") {
  return new Response(null, {
    status: 204,
    headers,
  });
}

return new Response(
  JSON.stringify({
    raid,
    handle: `${prefix}/${suffix}`,
  }),
  {
    headers,
  }
);
---
