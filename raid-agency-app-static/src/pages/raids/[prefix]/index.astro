---
import Breadcrumbs from "@/components/breadcrumbs.astro";
import RaidsTable from "@/components/raids-table.astro";
import Layout from "@/layouts/main.astro";
import { getRaidAppUrl } from "@/utils/data-utils";

import { raids } from "@/store/raids";
const { prefix } = Astro.params;

// Filter raids by prefix
const filteredRaids = raids.filter((raid) => {
  const [_, raidPrefix] = new URL(raid.identifier.id).pathname.split("/");
  return raidPrefix === prefix;
});

export async function getStaticPaths() {
  const prefixRaidCount = new Map<string, number>();

  for (const el of raids) {
    const [_, prefix] = new URL(el.identifier.id).pathname.split("/");
    const counter = prefixRaidCount.get(prefix) || 0;
    prefixRaidCount.set(prefix, counter + 1);
  }

  return Array.from(prefixRaidCount.entries()).map(([key]) => {
    return {
      params: { prefix: key },
      props: { prefix: key },
    };
  });
}

const raidAppUrl = getRaidAppUrl();
---

<Layout title="main">
  <div class="overflow-hidden rounded-md bg-white border border-gray-300">
    <Breadcrumbs
      elements={[
        { to: "/prefixes", label: `Prefixes` },
        { to: "/raids", label: `Prefix ${prefix}` },
      ]}
    />
    <div class="p-4 sm:p-6 lg:p-8">
      <div class="sm:flex sm:items-center">
        <div class="sm:flex-auto">
          <h1 class="text-base font-semibold leading-6 text-gray-900">
            RAiDs for prefix {prefix}
          </h1>
          <p class="mt-2 text-sm text-gray-700">
            A list of all the RAiDs for prefix {prefix}
          </p>
        </div>
        <div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
          <a
            href={`${raidAppUrl}/raids/new`}
            target="_blank"
            class="rounded-md bg-white px-2.5 py-1.5 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50"
            >Add RAiD</a
          >
        </div>
      </div>
      <RaidsTable raids={filteredRaids} />
    </div>
  </div>
</Layout>
