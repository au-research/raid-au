---
import type { Contributor } from "@/generated/raid";
import ContributorPositions from "@/components/raid-components/contributor-positions.astro";
import ContributorRoles from "@/components/raid-components/contributor-roles.astro";
import InfoField from "../info-field.astro";

interface Props {
  contributors: Contributor[];
}

const { contributors = [] } = Astro.props as Props;
---

<section class="bg-gray-50 py-5">
  <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
    <h3 class="text-lg font-semibold text-gray-900">Contributors</h3>
    {
      contributors.length === 0 && (
        <h5 class="text-gray-500 text-sm">No Entries</h5>
      )
    }
    <div class="divide-y divide-gray-200">
      {
        contributors.map(({ id, leader, contact, position, role }) => (
          <div class="ml-5 space-y-2 py-4">
            <div class="grid grid-cols-4 gap-5 text-sm">
              <InfoField label="Contributor" value={id} />
              <InfoField label="Leader" value={leader ? "Yes" : "No"} />
              <InfoField label="Contact" value={contact ? "Yes" : "No"} />
            </div>

            <div>
              <span class="block font-medium text-gray-900">Positions</span>
              {position.length === 0 && (
                <h5 class="text-gray-500 text-sm">No Entries</h5>
              )}
              <ContributorPositions contributorPositions={position} />
            </div>

            <div>
              <span class="block font-medium text-gray-900">Roles</span>
              {role.length === 0 && (
                <h5 class="text-gray-500 text-sm">No Entries</h5>
              )}
              <ContributorRoles contributorRoles={role} />
            </div>
          </div>
        ))
      }
    </div>
  </div>
</section>
