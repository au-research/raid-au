---
import InfoField from "@/components/info-field.astro";
import type { RelatedObject } from "@/generated/raid";
import mapping from "@/mapping/data/general-mapping.json";
import { kebabToTitle } from "@/utils";

interface Props {
  relatedObjects: RelatedObject[];
}

const { relatedObjects } = Astro.props as Props;
---

<section class="bg-gray-50 py-5">
  <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
    <h3 class="text-lg font-semibold text-gray-900">RelatedObjects</h3>

    {
      relatedObjects.length === 0 && (
        <h5 class="text-gray-500 text-sm">No Entries</h5>
      )
    }
    <div class="divide-y divide-gray-200">
      {
        relatedObjects?.map((el) => {
          const relatedObjectType =
            mapping.find((mapEl) => mapEl.key === el.type?.id)?.value ||
            el.type?.id;
          return (
            <div class="ml-5 space-y-2 py-4">
              <div class="grid grid-cols-2 gap-5 text-sm">
                <InfoField label="Citation" value={el.citation?.text || ""} />
                <InfoField label="ID" value={el.id || ""} />
                <InfoField label="Type" value={relatedObjectType || ""} />
              </div>

              <div class="grid grid-cols-1 gap-5 text-sm">
                <span class="block font-medium text-gray-900">Categories</span>
                <div class="flex gap-3">
                  {el.category?.map((el) => {
                    const relatedObjectCategory =
                      mapping.find((mapEl) => mapEl.key === el.id)?.value ||
                      el.id;
                    return (
                      <span class="truncate inline-flex items-center gap-x-1.5 rounded-md bg-gray-200 px-2 py-1 text-xs font-medium text-gray-700">
                        {kebabToTitle(relatedObjectCategory)}
                      </span>
                    );
                  })}
                </div>
              </div>
            </div>
          );
        })
      }
    </div>
  </div>
</section>
